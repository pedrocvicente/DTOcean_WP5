# -*- coding: utf-8 -*-
"""
@author: WavEC Offshore Renewables
email: boris.teillant@wavec.org; paulo@wavec.org

This module is part of the characterization step in the WP5 methodology. It 
contains feasibility functions to compute the minimum logistic requirements to 
carry out the different logistic phases. This particular modules includes the
function related to the installation of devices.

BETA VERSION NOTES: This function is not being used in the current version.
"""


def user_inputs_feas(log_phase, log_phase_id, user_inputs):
    """wp1_feas is a function which determines the logistic requirement 
    associated with one logistic phase dealing with the installation of devices
        
    Parameters
    ----------
    log_phase : Class
     Class of the logistic phase under consideration for assessment
    log_phase_id : str
     string describing the ID of the logistic phase under consideration
    user_inputs : dict
     dictionnary containing all required inputs to WP5 coming from WP1/end-user
    
    Returns
    -------
    feas_e : dict
     dictionnary containing all logistic requirements associated with every
     equipment type of the logistic phase under consideration
    feas_v : dict
     dictionnary containing all logistic requirements associated with every
     vessel type of the logistic phase under consideration
    """    
    deck_loading = user_inputs['device']['length [m]'].ix[0] * user_inputs['device']['width [m]'].ix[0] / user_inputs['device']['drymass [kg]'].ix[0]
    deck_area = user_inputs['device']['length [m]'].ix[0] * user_inputs['device']['width [m]'].ix[0]
    feasibility = {'equipment': [],
                   'vessel': {'Deck loading [m2/ton]': ['Sup', 'all', deck_loading],
                              'Deck area [m2]': ['Sup', 'all', deck_area]}}
    return feasibility
